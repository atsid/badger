{"version":3,"sources":["client/components/Application.js"],"names":["React","require","ReactRouter","Router","Route","IndexRoute","NoMatch","Skeleton","Dashboard","Login","MyProjects","OrgProjects","UserProjects","injectTapEventPlugin","createBrowserHistory","Application","createClass","childContextTypes","muiTheme","PropTypes","object","stores","isRequired","getChildContext","render","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA,IAAMC,cAAcD,QAAQ,cAAR,CAApB;AACA,IAAME,SAASD,YAAYC,MAA3B;AACA,IAAMC,QAAQF,YAAYE,KAA1B;AACA,IAAMC,aAAaH,YAAYG,UAA/B;;AAEA;AACA,IAAMC,UAAUL,QAAQ,WAAR,CAAhB;AACA,IAAMM,WAAWN,QAAQ,YAAR,CAAjB;AACA,IAAMO,YAAYP,QAAQ,aAAR,CAAlB;AACA,IAAMQ,QAAQR,QAAQ,SAAR,CAAd;AACA,IAAMS,aAAaT,QAAQ,cAAR,CAAnB;AACA,IAAMU,cAAcV,QAAQ,eAAR,CAApB;AACA,IAAMW,eAAeX,QAAQ,gBAAR,CAArB;;AAEA;AACA;AACA;AACA;AACA,IAAMY,uBAAuBZ,QAAQ,wBAAR,CAA7B;AACAY;;AAEA,IAAMC,uBAAuBb,QAAQ,8BAAR,CAA7B;;AAEA,IAAMc,cAAcf,MAAMgB,WAAN,CAAkB;AAAA;;AACpCC,qBAAmB;AACjBC,cAAUlB,MAAMmB,SAAN,CAAgBC,MADT;AAEjBC,YAAQrB,MAAMmB,SAAN,CAAgBC,MAAhB,CAAuBE;AAFd,GADiB;;AAMpCC,iBANoC,6BAMlB;AAChB,WAAO;AACLF,cAAQpB,QAAQ,aAAR;AADH,KAAP;AAGD,GAVmC;AAYpCuB,QAZoC,oBAY3B;AACP,WACE;AAAC,YAAD;AAAA,QAAQ,SAASV,sBAAjB;AACE;AAAC,aAAD;AAAA,UAAO,MAAK,GAAZ,EAAgB,WAAWP,QAA3B;AACE,4BAAC,UAAD,IAAY,WAAWC,SAAvB,GADF;AAEE,4BAAC,KAAD,IAAO,MAAK,OAAZ,EAAoB,WAAWC,KAA/B,GAFF;AAGE,4BAAC,KAAD,IAAO,MAAK,MAAZ,EAAmB,WAAWC,UAA9B,GAHF;AAIE,4BAAC,KAAD,IAAO,MAAK,UAAZ,EAAuB,WAAWC,WAAlC,GAJF;AAKE,4BAAC,KAAD,IAAO,MAAK,YAAZ,EAAyB,WAAWC,YAApC,GALF;AAME,4BAAC,KAAD,IAAO,MAAK,GAAZ,EAAgB,WAAWN,OAA3B;AANF;AADF,KADF;AAYD;AAzBmC,CAAlB,CAApB;AA2BAmB,OAAOC,OAAP,GAAiBX,WAAjB","file":"Application.js","sourceRoot":"/Users/ctrevino/Workspace/ats/badger","sourcesContent":["const React = require('react');\n\n// Router Components\nconst ReactRouter = require('react-router');\nconst Router = ReactRouter.Router;\nconst Route = ReactRouter.Route;\nconst IndexRoute = ReactRouter.IndexRoute;\n\n// Application Components\nconst NoMatch = require('./NoMatch');\nconst Skeleton = require('./Skeleton');\nconst Dashboard = require('./Dashboard');\nconst Login = require('./Login');\nconst MyProjects = require('./MyProjects');\nconst OrgProjects = require('./OrgProjects');\nconst UserProjects = require('./UserProjects');\n\n// Needed for onTouchTap\n// Can go away when react 1.0 release\n// Check this repo:\n// https://github.com/zilverline/react-tap-event-plugin\nconst injectTapEventPlugin = require('react-tap-event-plugin');\ninjectTapEventPlugin();\n\nconst createBrowserHistory = require('history/createBrowserHistory');\n\nconst Application = React.createClass({\n  childContextTypes: {\n    muiTheme: React.PropTypes.object,\n    stores: React.PropTypes.object.isRequired,\n  },\n\n  getChildContext() {\n    return {\n      stores: require('./../stores'),\n    };\n  },\n\n  render() {\n    return (\n      <Router history={createBrowserHistory()}>\n        <Route path=\"/\" component={Skeleton}>\n          <IndexRoute component={Dashboard} />\n          <Route path=\"login\" component={Login} />\n          <Route path=\"mine\" component={MyProjects} />\n          <Route path=\"org/:org\" component={OrgProjects} />\n          <Route path=\"user/:user\" component={UserProjects} />\n          <Route path=\"*\" component={NoMatch} />\n        </Route>\n      </Router>\n    );\n  },\n});\nmodule.exports = Application;\n"]}