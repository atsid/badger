{"version":3,"sources":["client/components/Skeleton.js"],"names":["React","require","mui","AppBar","LeftNav","FlatButton","Router","Skeleton","createClass","propTypes","children","PropTypes","node","contextTypes","history","isRequired","stores","object","getInitialState","loading","user","componentDidMount","getStateFromStore","onLeftNavToggle","refs","leftNav","toggle","onLeftNavChange","e","key","payload","context","pushState","route","state","projects","users","getCurrentUser","then","setState","catch","render","menuItems","text","disabled","push","appBarRightLabel","name","props","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA,IAAMC,MAAMD,QAAQ,aAAR,CAAZ;AACA,IAAME,SAASD,IAAIC,MAAnB;AACA,IAAMC,UAAUF,IAAIE,OAApB;AACA,IAAMC,aAAaH,IAAIG,UAAvB;AACA,IAAMC,SAASL,QAAQ,cAAR,CAAf;;AAEA,IAAMM,WAAWP,MAAMQ,WAAN,CAAkB;AAAA;;AACjCC,aAAW;AACTC,cAAUV,MAAMW,SAAN,CAAgBC;AADjB,GADsB;;AAKjCC,gBAAc;AACZC,aAASR,OAAOK,SAAP,CAAiBG,OAAjB,CAAyBC,UADtB;AAEZC,YAAQhB,MAAMW,SAAN,CAAgBM,MAAhB,CAAuBF;AAFnB,GALmB;;AAUjCG,iBAViC,6BAUf;AAChB,WAAO,EAAEC,SAAS,IAAX,EAAiBC,MAAM,IAAvB,EAAP;AACD,GAZgC;AAcjCC,mBAdiC,+BAcb;AAClB,SAAKC,iBAAL;AACD,GAhBgC;AAkBjCC,iBAlBiC,6BAkBf;AAChB,WAAO,KAAKC,IAAL,CAAUC,OAAV,CAAkBC,MAAlB,EAAP;AACD,GApBgC;AAsBjCC,iBAtBiC,2BAsBjBC,CAtBiB,EAsBdC,GAtBc,EAsBTC,OAtBS,EAsBA;AAC/B;AACA,SAAKC,OAAL,CAAajB,OAAb,CAAqBkB,SAArB,CAA+B,IAA/B,EAAqCF,QAAQG,KAA7C;AACD,GAzBgC;AA2BjCX,mBA3BiC,+BA2Bb;AAAA;;AAClB,SAAKY,KAAL,GAAa,EAACC,UAAU,EAAX,EAAehB,SAAS,IAAxB,EAAb;AACA,WAAO,KAAKY,OAAL,CAAaf,MAAb,CAAoBoB,KAApB,CAA0BC,cAA1B,GACJC,IADI,CACC,UAAClB,IAAD;AAAA,aAAU,MAAKmB,QAAL,CAAc,EAACnB,UAAD,EAAOD,SAAS,KAAhB,EAAd,CAAV;AAAA,KADD,EAEJqB,KAFI,CAEE,YAAM;AACX,YAAKD,QAAL,CAAc,EAACpB,SAAS,KAAV,EAAd;AACD,KAJI,CAAP;AAKD,GAlCgC;AAoCjCsB,QApCiC,oBAoCxB;AACP,QAAMC,YAAY,CAChB,EAACT,OAAO,GAAR,EAAaU,MAAM,MAAnB,EADgB,EAEhB,EAACV,OAAO,OAAR,EAAiBU,MAAM,aAAvB,EAAsCC,UAAU,CAAC,KAAKV,KAAL,CAAWd,IAA5D,EAFgB,CAAlB;;AAKA,QAAI,KAAKc,KAAL,CAAWd,IAAf,EAAqB;AACnBsB,gBAAUG,IAAV,CAAe,EAACZ,OAAO,SAAR,EAAmBU,MAAM,QAAzB,EAAf;AACD,KAFD,MAEO;AACLD,gBAAUG,IAAV,CAAe,EAACZ,OAAO,QAAR,EAAkBU,MAAM,OAAxB,EAAf;AACD;;AAED,QAAMG,mBAAmB,KAAKZ,KAAL,CAAWd,IAAX,GAAkB,KAAKc,KAAL,CAAWd,IAAX,CAAgB2B,IAAlC,GAAyC,OAAlE;AACA,WACE;AAAA;AAAA;AACE,0BAAC,OAAD;AACE,aAAI,SADN;AAEE,mBAAWL,SAFb;AAGE,gBAAQ,KAHV;AAIE,kBAAU,KAAKf,eAJjB,GADF;AAOE;AAAA;AAAA;AACE,4BAAC,MAAD;AACE,iBAAM,QADR;AAEE,oCAA0B,KAAKJ,eAFjC;AAGE,4BAAkB,oBAAC,UAAD,IAAY,OAAOuB,gBAAnB,GAHpB;AADF,OAPF;AAcE;AAAA;AAAA,UAAS,WAAU,SAAnB;AACG,aAAKE,KAAL,CAAWtC;AADd;AAdF,KADF;AAoBD;AArEgC,CAAlB,CAAjB;;AAwEAuC,OAAOC,OAAP,GAAiB3C,QAAjB","file":"Skeleton.js","sourceRoot":"/Users/ctrevino/Workspace/ats/badger","sourcesContent":["const React = require('react');\n\n// Components\nconst mui = require('material-ui');\nconst AppBar = mui.AppBar;\nconst LeftNav = mui.LeftNav;\nconst FlatButton = mui.FlatButton;\nconst Router = require('react-router');\n\nconst Skeleton = React.createClass({\n  propTypes: {\n    children: React.PropTypes.node,\n  },\n\n  contextTypes: {\n    history: Router.PropTypes.history.isRequired,\n    stores: React.PropTypes.object.isRequired,\n  },\n\n  getInitialState() {\n    return { loading: true, user: null };\n  },\n\n  componentDidMount() {\n    this.getStateFromStore();\n  },\n\n  onLeftNavToggle() {\n    return this.refs.leftNav.toggle();\n  },\n\n  onLeftNavChange(e, key, payload) {\n    // Do DOM Diff refresh\n    this.context.history.pushState(null, payload.route);\n  },\n\n  getStateFromStore() {\n    this.state = {projects: [], loading: true};\n    return this.context.stores.users.getCurrentUser()\n      .then((user) => this.setState({user, loading: false}))\n      .catch(() => {\n        this.setState({loading: false});\n      });\n  },\n\n  render() {\n    const menuItems = [\n      {route: '/', text: 'Home'},\n      {route: '/mine', text: 'My Projects', disabled: !this.state.user},\n    ];\n\n    if (this.state.user) {\n      menuItems.push({route: '/logout', text: 'Logout'});\n    } else {\n      menuItems.push({route: '/login', text: 'Login'});\n    }\n\n    const appBarRightLabel = this.state.user ? this.state.user.name : 'Login';\n    return (\n      <div>\n        <LeftNav\n          ref=\"leftNav\"\n          menuItems={menuItems}\n          docked={false}\n          onChange={this.onLeftNavChange} />\n\n        <header>\n          <AppBar\n            title=\"Badger\"\n            onLeftIconButtonTouchTap={this.onLeftNavToggle}\n            iconElementRight={<FlatButton label={appBarRightLabel} />} />\n        </header>\n\n        <section className=\"content\">\n          {this.props.children}\n        </section>\n      </div>\n    );\n  },\n});\n\nmodule.exports = Skeleton;\n"]}